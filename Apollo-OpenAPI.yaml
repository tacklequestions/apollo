openapi: 3.0.1
info:
  title: Apollo-OpenAPI
  description: ''
  version: 1.0.0
tags:
  - name: Apps
  - name: Commit
  - name: Configs
  - name: Env
  - name: Fav
  - name: Item
  - name: Instance
  - name: Branch
  - name: NameSpace
  - name: Namespace
  - name: Permission
  - name: App
  - name: Clusters
  - name: Release
paths:
  /apps:
    post:
      summary: 创建App
      deprecated: false
      description: 创建一个新的 App
      operationId: createApp
      tags:
        - Apps
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          required: true
          example: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                req:
                  $ref: '#/components/schemas/OpenCreateAppDTO'
              required:
                - req
            examples: {}
      responses:
        '200':
          description: OK
          headers: {}
      security: []
    get:
      summary: 根据appId查找App
      deprecated: false
      description: ''
      operationId: findApps
      tags:
        - Apps
      parameters:
        - name: appIds
          in: query
          description: 若appIds为空则返回全部所有App
          required: false
          example: tian-app,100,66,100004458,11232131,1000001
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    appId:
                      type: string
                    orgId:
                      type: string
                    orgName:
                      type: string
                    ownerName:
                      type: string
                    ownerEmail:
                      type: string
                    id:
                      type: integer
                    isDeleted:
                      type: boolean
                    deletedAt:
                      type: integer
                    dataChangeCreatedBy:
                      type: string
                    dataChangeCreatedTime:
                      type: string
                    dataChangeLastModifiedBy:
                      type: string
                    dataChangeLastModifiedTime:
                      type: string
                  required:
                    - name
                    - appId
                    - orgId
                    - orgName
                    - ownerName
                    - ownerEmail
                    - id
                    - isDeleted
                    - deletedAt
                    - dataChangeCreatedBy
                    - dataChangeCreatedTime
                    - dataChangeLastModifiedBy
                    - dataChangeLastModifiedTime
              example:
                - name: liveService
                  appId: '1000001'
                  orgId: micro_service
                  orgName: 微服务部门
                  ownerName: apollo
                  ownerEmail: apollo@acme.com
                  id: 3288
                  isDeleted: false
                  deletedAt: 0
                  dataChangeCreatedBy: apollo
                  dataChangeCreatedTime: 2025-06-18T19:33:27.000+0800
                  dataChangeLastModifiedBy: apollo
                  dataChangeLastModifiedTime: 2025-06-18T19:33:27.000+0800
                - name: apollo-demo
                  appId: '100004458'
                  orgId: TEST1
                  orgName: 测试部门
                  ownerName: apollo
                  ownerEmail: apollo@acme.com
                  id: 2762
                  isDeleted: false
                  deletedAt: 0
                  dataChangeCreatedBy: apollo
                  dataChangeCreatedTime: 2024-11-23T10:22:49.000+0800
                  dataChangeLastModifiedBy: apollo
                  dataChangeLastModifiedTime: 2024-11-23T10:22:49.000+0800
                - name: '1312312'
                  appId: '11232131'
                  orgId: micro_service
                  orgName: 微服务部门
                  ownerName: apollo
                  ownerEmail: apollo@acme.com
                  id: 3255
                  isDeleted: false
                  deletedAt: 0
                  dataChangeCreatedBy: apollo
                  dataChangeCreatedTime: 2025-06-02T20:14:49.000+0800
                  dataChangeLastModifiedBy: apollo
                  dataChangeLastModifiedTime: 2025-06-02T20:14:49.000+0800
                - name: '111'
                  appId: '66'
                  orgId: micro_service
                  orgName: 大数据部门
                  ownerName: apollo
                  ownerEmail: apollo@acme.com
                  id: 3220
                  isDeleted: false
                  deletedAt: 0
                  dataChangeCreatedBy: apollo
                  dataChangeCreatedTime: 2025-05-25T12:51:07.000+0800
                  dataChangeLastModifiedBy: apollo
                  dataChangeLastModifiedTime: 2025-05-25T12:51:07.000+0800
                - name: tian示例应用
                  appId: tian-app
                  orgId: '111'
                  orgName: 互联网研发部
                  ownerName: test2
                  ownerEmail: aaa
                  id: 208
                  isDeleted: false
                  deletedAt: 0
                  dataChangeCreatedBy: TianLX
                  dataChangeCreatedTime: 2023-02-01T13:45:23.000+0800
                  dataChangeLastModifiedBy: apollo
                  dataChangeLastModifiedTime: 2024-09-27T05:05:29.000+0800
          headers: {}
      security: []
  /apps/{appId}/envclusters:
    get:
      summary: 根据appId获取Envs&Clusters
      deprecated: false
      description: ''
      operationId: getEnvClusterInfo
      tags:
        - Apps
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          example: '1000001'
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  entities:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                        message:
                          type: string
                        body:
                          type: object
                          properties:
                            env:
                              type: string
                            clusters:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  name:
                                    type: string
                                  appId:
                                    type: string
                                  parentClusterId:
                                    type: integer
                                  dataChangeCreatedBy:
                                    type: string
                                  dataChangeLastModifiedBy:
                                    type: string
                                  dataChangeCreatedTime:
                                    type: string
                                  dataChangeLastModifiedTime:
                                    type: string
                                  comment:
                                    type: string
                                required:
                                  - id
                                  - name
                                  - appId
                                  - parentClusterId
                                  - dataChangeCreatedBy
                                  - dataChangeLastModifiedBy
                                  - dataChangeCreatedTime
                                  - dataChangeLastModifiedTime
                                  - comment
                          required:
                            - env
                            - clusters
                required:
                  - entities
              example:
                entities:
                  - code: 200
                    message: OK
                    body:
                      env: DEV
                      clusters:
                        - id: 5824
                          name: default
                          appId: '1000001'
                          parentClusterId: 0
                          dataChangeCreatedBy: apollo
                          dataChangeLastModifiedBy: apollo
                          dataChangeCreatedTime: 2025-06-18T19:33:27.000+0800
                          dataChangeLastModifiedTime: 2025-06-18T19:33:27.000+0800
                        - id: 5849
                          name: '123'
                          appId: '1000001'
                          parentClusterId: 0
                          comment: ''
                          dataChangeCreatedBy: apollo
                          dataChangeLastModifiedBy: apollo
                          dataChangeCreatedTime: 2025-06-24T15:25:37.000+0800
                          dataChangeLastModifiedTime: 2025-06-24T15:25:37.000+0800
                        - id: 5892
                          name: '1234'
                          appId: '1000001'
                          parentClusterId: 0
                          comment: 添加的新集群
                          dataChangeCreatedBy: apollo
                          dataChangeLastModifiedBy: apollo
                          dataChangeCreatedTime: 2025-07-02T09:14:58.000+0800
                          dataChangeLastModifiedTime: 2025-07-02T09:14:58.000+0800
          headers: {}
      security: []
  /apps/authorized:
    get:
      summary: 查询有权操作的所有App
      deprecated: false
      description: ''
      operationId: findAppsAuthorized
      tags:
        - Apps
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          required: false
          example: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    appId:
                      type: string
                    orgId:
                      type: string
                    orgName:
                      type: string
                    ownerName:
                      type: string
                    ownerEmail:
                      type: string
                    id:
                      type: integer
                    isDeleted:
                      type: boolean
                    deletedAt:
                      type: integer
                    dataChangeCreatedBy:
                      type: string
                    dataChangeCreatedTime:
                      type: string
                    dataChangeLastModifiedBy:
                      type: string
                    dataChangeLastModifiedTime:
                      type: string
                  required:
                    - name
                    - appId
                    - orgId
                    - orgName
                    - ownerName
                    - ownerEmail
                    - id
                    - isDeleted
                    - deletedAt
                    - dataChangeCreatedBy
                    - dataChangeCreatedTime
                    - dataChangeLastModifiedBy
                    - dataChangeLastModifiedTime
              example:
                - name: liveService
                  appId: '1000001'
                  orgId: micro_service
                  orgName: 微服务部门
                  ownerName: apollo
                  ownerEmail: apollo@acme.com
                  id: 3288
                  isDeleted: false
                  deletedAt: 0
                  dataChangeCreatedBy: apollo
                  dataChangeCreatedTime: 2025-06-18T19:33:27.000+0800
                  dataChangeLastModifiedBy: apollo
                  dataChangeLastModifiedTime: 2025-06-18T19:33:27.000+0800
                - name: user-service
                  appId: '100001'
                  orgId: minecreaft
                  orgName: MinecreaftPaperPlugin
                  ownerName: apollo
                  ownerEmail: apollo@acme.com
                  id: 2968
                  isDeleted: false
                  deletedAt: 0
                  dataChangeCreatedBy: apollo
                  dataChangeCreatedTime: 2025-02-09T21:58:22.000+0800
                  dataChangeLastModifiedBy: apollo
                  dataChangeLastModifiedTime: 2025-05-05T22:07:02.000+0800
                - name: shop-service
                  appId: '100002'
                  orgId: micro_service
                  orgName: 微服务部门
                  ownerName: apollo
                  ownerEmail: apollo@acme.com
                  id: 2969
                  isDeleted: false
                  deletedAt: 0
                  dataChangeCreatedBy: apollo
                  dataChangeCreatedTime: 2025-02-09T22:04:53.000+0800
                  dataChangeLastModifiedBy: apollo
                  dataChangeLastModifiedTime: 2025-06-09T13:36:48.000+0800
          headers: {}
      security: []
  /{appId}:
    put:
      summary: 根据appId更新App
      deprecated: false
      description: ''
      tags:
        - Apps
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                '':
                  $ref: '#/components/schemas/OpenAppDTO'
              required:
                - ''
            examples: {}
      responses:
        '200':
          description: OK
          headers: {}
      security: []
  /apps/{appId}:
    delete:
      summary: 根据appId删除App
      deprecated: false
      description: ''
      operationId: deleteApp
      tags:
        - Apps
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
      security: []
  /apps/{appId}/miss_envs:
    get:
      summary: 根据appId查询app缺失的环境
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  entities:
                    type: array
                    items:
                      type: string
                required:
                  - code
                  - entities
              example:
                code: 200
                entities:
                  - - DEV
                    - FAT
          headers: {}
      security: []
  /apps/{appId}/navtree:
    get:
      summary: 根据appId获取navtree
      deprecated: false
      description: ''
      operationId: nav
      tags:
        - Apps
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  entities:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                        message:
                          type: string
                        body:
                          type: object
                          properties:
                            env:
                              type: string
                            clusters:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  name:
                                    type: string
                                  appId:
                                    type: string
                                  parentClusterId:
                                    type: integer
                                  dataChangeCreatedBy:
                                    type: string
                                  dataChangeLastModifiedBy:
                                    type: string
                                  dataChangeCreatedTime:
                                    type: string
                                  dataChangeLastModifiedTime:
                                    type: string
                                  comment:
                                    type: string
                                required:
                                  - id
                                  - name
                                  - appId
                                  - parentClusterId
                                  - dataChangeCreatedBy
                                  - dataChangeLastModifiedBy
                                  - dataChangeCreatedTime
                                  - dataChangeLastModifiedTime
                                  - comment
                          required:
                            - env
                            - clusters
                required:
                  - code
                  - entities
              example:
                code: 200
                entities:
                  - code: 200
                    message: OK
                    body:
                      env: DEV
                      clusters:
                        - id: 420
                          name: default
                          appId: app-test01
                          parentClusterId: 0
                          dataChangeCreatedBy: sjh
                          dataChangeLastModifiedBy: sjh
                          dataChangeCreatedTime: 2023-02-02T15:31:44.000+0800
                          dataChangeLastModifiedTime: 2023-02-02T15:31:44.000+0800
                        - id: 4539
                          name: jk
                          appId: app-test01
                          parentClusterId: 0
                          comment: ''
                          dataChangeCreatedBy: apollo
                          dataChangeLastModifiedBy: apollo
                          dataChangeCreatedTime: 2024-10-13T18:41:56.000+0800
                          dataChangeLastModifiedTime: 2024-10-13T18:41:56.000+0800
                        - id: 5430
                          name: test
                          appId: app-test01
                          parentClusterId: 0
                          comment: test
                          dataChangeCreatedBy: apollo
                          dataChangeLastModifiedBy: apollo
                          dataChangeCreatedTime: 2025-03-30T19:21:20.000+0800
                          dataChangeLastModifiedTime: 2025-03-30T19:21:20.000+0800
                        - id: 5711
                          name: test1
                          appId: app-test01
                          parentClusterId: 0
                          dataChangeCreatedBy: oliver
                          dataChangeCreatedTime: 2025-05-26T17:52:09.000+0800
                          dataChangeLastModifiedTime: 2025-05-26T17:52:09.000+0800
                        - id: 5894
                          name: cluster-1751449572
                          appId: app-test01
                          parentClusterId: 0
                          dataChangeCreatedBy: apollo
                          dataChangeCreatedTime: 2025-07-02T17:46:12.000+0800
                          dataChangeLastModifiedTime: 2025-07-02T17:46:12.000+0800
                        - id: 5895
                          name: cluster-1751451847
                          appId: app-test01
                          parentClusterId: 0
                          dataChangeCreatedBy: apollo
                          dataChangeCreatedTime: 2025-07-02T18:24:08.000+0800
                          dataChangeLastModifiedTime: 2025-07-02T18:24:08.000+0800
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters:
    post:
      summary: 基于appId&env创建cluster
      deprecated: false
      description: ''
      operationId: createCluster
      tags:
        - Apps
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenClusterDTO'
            examples: {}
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  Result:
                    $ref: '#/components/schemas/OpenClusterDTO'
                    description: 名称待确定
                required:
                  - Result
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName:.+}:
    get:
      summary: 查询cluster相关信息
      deprecated: false
      description: 根据appId&env&clusterName查询app的cluster相关信息
      operationId: loadCluster
      tags:
        - Apps
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName:.+
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenClusterDTO'
          headers: {}
      security: []
    delete:
      summary: 删除Cluster
      deprecated: false
      description: 根据appId&env&clusterName删除cluster
      tags: []
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName:.+
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/commits:
    get:
      summary: 查询commit信息
      deprecated: false
      description: ''
      operationId: loadCommits
      tags:
        - Commit
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: ''
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          description: ''
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 0
            exclusiveMinimum: true
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commits:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpenCommitDTO'
                required:
                  - commits
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/items/export:
    get:
      summary: 导出指定配置项
      deprecated: false
      description: ''
      operationId: exportItems
      tags:
        - Configs
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Disposition:
              example: ''
              required: false
              description: 返回文件下载位置
              schema:
                type: string
      security: []
  /configs/export:
    get:
      summary: 导出全部配置项
      deprecated: false
      description: 必须要有SuperAdmin权限
      operationId: exportAll
      tags:
        - Configs
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Disposition:
              example: ''
              required: false
              description: 下载文件位置
              schema:
                type: string
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/items/import:
    get:
      summary: 导入配置项
      deprecated: false
      description: |-
        导入配置项
        * Yml 文件的名称必须以 {@code.yml} 结尾。
        * Properties 文件的名称必须以 {@code.properties} 结尾。
        * 以此类推。
      operationId: importConfigFile
      tags:
        - Configs
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  format: binary
                  type: string
                  example: ''
            examples: {}
      responses:
        '200':
          description: OK
          headers: {}
      security: []
  /configs/import:
    get:
      summary: 从文件中导入配置项（Ignore策略）
      deprecated: false
      description: |
        必须要有SuperAdmin权限
        Ignore策略：
        1. 保留现有配置：当导入的配置与现有配置冲突时，会保留现有的配置，忽略导入文件中的冲突项
        2. 仅添加新项：只会添加那些在现有配置中不存在的新配置项
        3. 适用场景：
            - 当你希望保留现有的已配置好的设置
            - 只想补充添加新的配置项
            - 进行配置合并而非替换时
      operationId: importConfigByZipWithIgnoreConflictNamespace
      tags:
        - Configs
      parameters:
        - name: conflictAction
          in: query
          description: must be ignore
          required: true
          example: ''
          schema:
            type: string
            default: ignore
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
      security: []
  /envs:
    get:
      summary: 获取环境
      deprecated: false
      description: 根据token获取app的环境
      operationId: envs
      tags:
        - Env
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  envs:
                    type: array
                    items:
                      type: string
                required:
                  - envs
          headers: {}
      security: []
  /favorites:
    post:
      summary: 新增收藏App
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                favorite:
                  $ref: '#/components/schemas/OpenFavoriteDTO'
                  description: 暂未填充
              required:
                - favorite
            examples: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fav:
                    $ref: '#/components/schemas/OpenFavoriteDTO'
                required:
                  - fav
          headers: {}
      security: []
    get:
      summary: 查找收藏
      deprecated: false
      description: ''
      operationId: findFavorites
      tags:
        - Fav
      parameters:
        - name: userId
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: appId
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  favs:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpenFavoriteDTO'
                required:
                  - favs
          headers: {}
      security: []
  /favorites/{favoriteId}:
    delete:
      summary: 删除收藏
      deprecated: false
      description: ''
      operationId: deleteFavorite
      tags:
        - Fav
      parameters:
        - name: favoriteId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          headers: {}
      security: []
    put:
      summary: 置顶收藏
      deprecated: false
      description: ''
      operationId: toTop
      tags:
        - Fav
      parameters:
        - name: favoriteId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
      security: []
  /global-search/item-info/by-key-or-value:
    get:
      summary: 根据key&value搜索配置项
      deprecated: false
      description: 必须要有superAdmin权限
      operationId: getItemInfoBySearch
      tags:
        - Item
      parameters:
        - name: key
          in: query
          description: ''
          required: false
          schema:
            type: string
            default: '""'
        - name: value
          in: query
          description: ''
          required: false
          schema:
            type: string
            default: '""'
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpenItemInfo'
                required:
                  - items
          headers: {}
      security: []
  /envs/{env}/instances/by-release:
    get:
      summary: 根据env&releaseId查询instance
      deprecated: false
      description: ''
      operationId: getByRelease
      tags:
        - Instance
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: releaseId
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: long
        - name: page
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            default: 20
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/OpenPageDTO%3CT%3E'
                required:
                  - result
          headers: {}
      security: []
  /envs/{env}/instances/by-namespace:
    get:
      summary: 根据namespace获取instance
      deprecated: false
      description: ''
      operationId: getByNamespace
      tags:
        - Instance
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: appId
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: instanceAppId
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - name: size
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            default: 20
            minimum: 0
            exclusiveMinimum: true
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenPageDTO%3CT%3E'
          headers: {}
      security: []
  /envs/{env}/instances/by-namespace/count:
    get:
      summary: 根据namespace获取instance数量
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: appId
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                required:
                  - count
          headers: {}
      security: []
  /envs/{env}/instances/by-namespace-and-releases-not-in:
    get:
      summary: 根据namespace&releaseId获取不在env中的instance
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: appId
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: releaseIds
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpenInstanceDTO'
                required:
                  - result
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/items:
    put:
      summary: 基于文本修改item
      deprecated: false
      description: 具有修改item的权限
      operationId: modifyItemsByText
      tags:
        - Item
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  $ref: '#/components/schemas/OpenNamespaceTextModel'
              required:
                - model
            examples: {}
      responses:
        '200':
          description: OK
          headers: {}
      security: []
    get:
      summary: 查询item
      deprecated: false
      description: ''
      operationId: findItems
      tags:
        - Item
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: orderBy
          in: query
          description: ''
          required: true
          schema:
            type: string
            default: lineNum
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpenItemDTO'
                required:
                  - items
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/item:
    post:
      summary: 创建item
      deprecated: false
      description: ''
      operationId: createItem
      tags:
        - Item
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  $ref: '#/components/schemas/OpenItemDTO'
              required:
                - item
            examples: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/OpenItemDTO'
                required:
                  - result
          headers: {}
      security: []
    get:
      summary: 修改item
      deprecated: false
      description: 需要具有修改item的权限
      operationId: updateItem
      tags:
        - Item
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/items/{itemId}:
    get:
      summary: 删除item
      deprecated: false
      description: 需要具有修改item的权限
      operationId: deleteItem
      tags:
        - Item
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/branches/{branchName}/items:
    get:
      summary: 查询具体branch的item
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: branchName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpenItemDTO'
                required:
                  - items
          headers: {}
      security: []
  /namespaces/{namespaceName}/diff:
    get:
      summary: 根据namespace比较item的差异
      deprecated: false
      description: ''
      operationId: diff
      tags: []
      parameters:
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  diffs:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpenItemDiffs'
                required:
                  - diffs
          headers: {}
      security: []
  /apps/{appId}/namespaces/{namespaceName}/items:
    get:
      summary: 根据appId&namespace更新item
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  $ref: '#/components/schemas/OpenNamespaceSyncModel'
              required:
                - model
            examples: {}
      responses:
        '200':
          description: OK
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/syntax-check:
    post:
      summary: item配置语法检查
      deprecated: false
      description: ''
      operationId: syntaxCheckText
      tags:
        - Item
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  $ref: '#/components/schemas/OpenNamespaceTextModel'
              required:
                - model
            examples: {}
      responses:
        '200':
          description: OK
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/revoke-items:
    put:
      summary: 撤回item配置
      deprecated: false
      description: ''
      operationId: revokeItems
      tags:
        - Item
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/branches:
    get:
      summary: 创建灰度Branch
      deprecated: false
      description: ''
      operationId: createBranch
      tags:
        - Branch
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/OpenNamespaceDTO'
                required:
                  - result
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/branches/{branchName}:
    delete:
      summary: 删除灰度分支
      deprecated: false
      description: ''
      operationId: deleteBranch
      tags:
        - Branch
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: branchName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/branches/{branchName}/merge:
    post:
      summary: 合并分支
      deprecated: false
      description: ''
      operationId: merge
      tags:
        - Branch
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: branchName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: deleteBranch
          in: query
          description: ''
          required: true
          schema:
            type: boolean
            default: true
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  $ref: '#/components/schemas/OpenNamespaceReleaseModel'
              required:
                - model
            examples: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenReleaseDTO'
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                  exception:
                    type: string
                required:
                  - status
                  - message
                  - timestamp
                  - exception
              example:
                status: 400
                message: 'Env: dev is not supported emergency publish now'
                timestamp: '2024-05-29T09:00:00'
                exception: >-
                  com.ctrip.framework.apollo.common.exception.BadRequestException
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/branches/{branchName}/rules:
    get:
      summary: 更新分支规则
      deprecated: false
      description: 需要有操作namespace的权限
      operationId: updateBranchRules
      tags:
        - Branch
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: branchName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rules:
                  $ref: '#/components/schemas/OpenGrayReleaseRuleDTO'
              required:
                - rules
            examples: {}
      responses:
        '200':
          description: OK
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
                  exception:
                    type: string
                required:
                  - status
                  - message
                  - timestamp
                  - exception
              example:
                status: 403
                message: Access is denied
                timestamp: '2024-05-29T09:00:00'
                exception: org.springframework.security.access.AccessDeniedException
          headers: {}
      security: []
  /appnamespaces/public:
    get:
      summary: 查询公开的AppNamespace
      deprecated: false
      description: ''
      operationId: findPublicAppNamespaces
      tags:
        - NameSpace
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppNamespace'
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces:
    get:
      summary: 查询Namespace
      deprecated: false
      description: 基于appId、env、cluster查询namespace
      operationId: findNamespaces
      tags:
        - NameSpace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenNamespaceBO'
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}:
    get:
      summary: 根据appId&env&cluster&namespaceName查询Namespaces
      deprecated: false
      description: ''
      operationId: findNamespace
      tags:
        - NameSpace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenNamespaceBO'
          headers: {}
      security: []
  /envs/{env}/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/associated-public-namespace:
    get:
      summary: 查询与namespace相关的公开namespace
      deprecated: false
      description: ''
      operationId: findPublicNamespaceForAssociatedNamespace
      tags:
        - Namespace
        - Env
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenNamespaceDTO'
          headers: {}
      security: []
  /apps/{appId}/namespaces:
    post:
      summary: 根据AppID创建App的namespace
      deprecated: false
      description: 需要有创建某app的namespace的权限
      operationId: createNamespace
      tags:
        - NameSpace
        - Apps
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OpenNamespaceCreationModel'
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    const: '403'
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: time
                  exception:
                    type: string
                    description: AccessDeniedException.class
                required:
                  - status
                  - message
                  - exception
                  - timestamp
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/linked-namespaces/{namespaceName:.+}:
    delete:
      summary: 删除Namespace
      deprecated: false
      description: ''
      operationId: deleteLinkedNamespace
      tags:
        - Apps
        - Env
        - Namespace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName:.+
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/linked-namespaces/{namespaceName}/usage:
    get:
      summary: 查询Namespace的用量
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NamespaceUsage'
          headers: {}
      security: []
  /apps/{appId}/appnamespaces/{namespaceName:.+}:
    delete:
      summary: 删除AppNamespace
      deprecated: false
      description: ''
      operationId: deleteAppNamespace
      tags:
        - Apps
        - Namespace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName:.+
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
      security: []
  /apps/{appId}/namespaces/publish_info:
    get:
      summary: 获取namespace的publish相关信息
      deprecated: false
      description: 根据appid查询namespace的发布信息
      operationId: getNamespacesPublishInfo
      tags:
        - NameSpace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties:
                  type: object
                  properties:
                    env_name:
                      type: object
                      properties: {}
                      additionalProperties:
                        type: object
                        properties:
                          String:
                            type: boolean
                        required:
                          - String
                  required:
                    - env_name
          headers: {}
      security: []
  /apps/{appId}/appnamespaces:
    post:
      summary: 创建AppNamespace(疑似重复接口)
      deprecated: false
      description: ''
      operationId: createAppNamespace
      tags:
        - Apps
        - Namespace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: appendNamespacePrefix
          in: query
          description: ''
          required: false
          schema:
            type: boolean
            default: true
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppNamespace'
            examples: {}
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppNamespace'
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
      security: []
  /envs/{env}/appnamespaces/{publicNamespaceName}/namespaces:
    get:
      summary: 获取publicNamespace的全部namespace
      deprecated: false
      description: ''
      tags:
        - NameSpace
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: publicNamespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - name: size
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenNamespaceDTO'
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/missing-namespaces:
    get:
      summary: 创建缺失的namespace
      deprecated: false
      description: 根据appId&env&cluster，创建缺失的namespace（e.g 创建新env）
      tags: []
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/lock-info:
    get:
      summary: 查询namespace的lock信息
      deprecated: false
      description: ''
      operationId: getNamespaceLockInfo
      tags:
        - NameSpace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenLockInfo'
          headers: {}
      security: []
  /apps/{appId}/initPermission:
    post:
      summary: 初始化权限许可
      deprecated: false
      description: >-
        补齐某个 Namespace
        在各环境（或集群）中的默认“编辑”和“发布”权限角色。当历史数据或新环境缺少这些角色时，通过该接口即可一键创建，以保证权限体系完整。
      operationId: initAppPermission
      tags: []
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                namespaceName:
                  example: ''
                  type: string
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/initNsPermission:
    post:
      summary: 初始化clusterNamespace的权限许可
      deprecated: false
      description: ''
      operationId: initClusterNamespacePermission
      tags:
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
      security: []
  /apps/{appId}/permissions/{permissionType}:
    get:
      summary: 应用级权限检查
      deprecated: false
      description: 判断当前用户在指定应用上的权限，比如能否创建 Namespace、创建集群、分配权限
      operationId: hasPermission
      tags:
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: permissionType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenPermissionCondition'
          headers: {}
      security: []
  /apps/{appId}/namespaces/{namespaceName}/permissions/{permissionType}:
    get:
      summary: Namespace（不含环境）权限检查
      deprecated: false
      description: 构造目标 ID，检查用户对某个 Namespace 的权限，通常用于默认集群或多环境通用的场景。
      operationId: hasPermission
      tags:
        - Permission
        - App
        - Namespace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: permissionType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenPermissionCondition'
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/namespaces/{namespaceName}/permissions/{permissionType}:
    get:
      summary: 带环境的 Namespace 权限检查
      deprecated: false
      description: 针对具体环境的 Namespace，根据目标ID判断
      tags: []
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: permissionType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenPermissionCondition'
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/ns_permissions/{permissionType}:
    get:
      summary: 根据appId&env&clusterName&permissionType查询是否具有Permission
      deprecated: false
      description: ''
      operationId: hasClusterNamespacePermission
      tags:
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: permissionType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers: {}
      security: []
  /permissions/root:
    get:
      summary: root权限检查
      deprecated: false
      description: ''
      operationId: hasRootPermission
      tags:
        - Namespace
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenPermissionCondition'
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/namespaces/{namespaceName}/role_users:
    get:
      summary: 获得指定环境下的namespace权限角色
      deprecated: false
      description: ''
      operationId: getNamespaceEnvRoles
      tags:
        - Namespace
        - Env
        - Apps
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenNamespaceEnvRolesAssignedUsers'
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 状态
                    example: '400'
                  message:
                    type: string
                    description: 错误信息
                    example: invalid env format:YOUR ENV
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    example: BadRequestion
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/namespaces/{namespaceName}/roles/{roleType}:
    post:
      summary: 给用户分配NamespaceEnv角色
      deprecated: false
      description: ''
      operationId: assignNamespaceEnvRoleToUser
      tags:
        - Apps
        - Env
        - NameSpace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: roleType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 状态
                    example: '400'
                  message:
                    type: string
                    example: user not exists for userName:YOUR USER NAME
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    example: BadRequestExeception
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                  message:
                    type: string
                    example: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:请求体为空:
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    example: '400'
                  message:
                    type: string
                    example: request payload should not be contain empty.
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    example: BadRequestionException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:roleType格式错误:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    example: invalid roleType format:YOUR ROLE TYPE
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:Env格式错误:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    example: invalid env format:YOUR ENV
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:用户已授权:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    example: YOUR USERNAME already authorized
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
    delete:
      summary: 移除用户的NamespaceEnv角色
      deprecated: false
      description: ''
      operationId: removeNamespaceEnvRoleFromUser
      tags:
        - Apps
        - Env
        - NameSpace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: roleType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties: {}
            examples: {}
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: roleType格式无效
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^invalid roleType format:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:Env格式无效:
          description: ''
          content:
            application/json:
              schema:
                title: Env格式无效
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^invalid env format:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:请求体为空:
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    example: '400'
                  message:
                    type: string
                    example: request payload should not be contain empty.
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    example: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/ns_role_users:
    get:
      summary: 获取集群条件下的Namespace角色
      deprecated: false
      description: ''
      operationId: getClusterNamespaceRoles
      tags:
        - Apps
        - Env
        - Namespace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNamespaceRolesAssignedUsers'
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: Env格式无效
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^invalid env format:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/ns_roles/{roleType}:
    post:
      summary: 给用户分配ClusterNamespace角色
      deprecated: false
      description: ''
      operationId: assignClusterNamespaceRoleToUser
      tags:
        - Apps
        - Clusters
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: roleType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user:
                  example: ''
                  type: string
            examples: {}
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: Env格式无效
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^invalid env format:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:用户不存在:
          description: ''
          content:
            application/json:
              schema:
                title: 用户不存在
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^user not exists for userName:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:请求体为空:
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    example: '400'
                  message:
                    type: string
                    example: request payload should not be contain empty.
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    example: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
    delete:
      summary: 移除用户的ClusterNamespace角色
      deprecated: false
      description: ''
      operationId: removeClusterNamespaceRoleFromUser
      tags:
        - Apps
        - Clusters
        - Env
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: roleType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user:
                  example: ''
                  type: string
            examples: {}
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: roleType格式无效
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^invalid roleType format:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:Env格式无效:
          description: ''
          content:
            application/json:
              schema:
                title: Env格式无效
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^invalid env format:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:请求体为空:
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    example: '400'
                  message:
                    type: string
                    example: request payload should not be contain empty.
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    example: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /apps/{appId}/namespaces/{namespaceName}/role_users:
    get:
      summary: 获取Namespace角色
      deprecated: false
      description: ''
      tags:
        - Apps
        - Namespace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceRolesAssignedUsers'
          headers: {}
      security: []
  /apps/{appId}/namespaces/{namespaceName}/roles/{roleType}:
    post:
      summary: 给用户分配namespace角色
      deprecated: false
      description: ''
      operationId: assignNamespaceRoleToUser
      tags:
        - Apps
        - NameSpace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: roleType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user:
                  example: ''
                  type: string
            examples: {}
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: roleType格式无效
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^invalid roleType format:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
        x-400:用户不存在:
          description: ''
          content:
            application/json:
              schema:
                title: 用户不存在
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^user not exists for userName:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:用户已被授权:
          description: ''
          content:
            application/json:
              schema:
                title: 用户已被授权
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^(.+) already authorized$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
    delete:
      summary: 移除用户的Namespace角色
      deprecated: false
      description: ''
      tags:
        - Apps
        - Namespace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: roleType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: roleType格式无效
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^invalid roleType format:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
        x-400:请求体为空:
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    example: '400'
                  message:
                    type: string
                    example: request payload should not be contain empty.
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    example: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /apps/{appId}/role_users:
    get:
      summary: 获取App角色
      deprecated: false
      description: ''
      operationId: getAppRoles
      tags:
        - Apps
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRolesAssignedUsers'
          headers: {}
      security: []
  /apps/{appId}/roles/{roleType}:
    post:
      summary: 给用户分配App角色
      deprecated: false
      description: ''
      operationId: assignAppRoleToUser
      tags:
        - Apps
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: roleType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user:
                  example: ''
                  type: string
            examples: {}
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: roleType格式无效
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^invalid roleType format:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:用户不存在:
          description: ''
          content:
            application/json:
              schema:
                title: 用户不存在
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^user not exists for userName:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:用户已被授权:
          description: ''
          content:
            application/json:
              schema:
                title: 用户已被授权
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^(.+) already authorized$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:请求体为空:
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    example: '400'
                  message:
                    type: string
                    example: request payload should not be contain empty.
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    example: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
    delete:
      summary: 移除用户的App角色
      deprecated: false
      description: ''
      operationId: removeAppRoleFromUser
      tags:
        - Apps
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: roleType
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: user
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: roleType格式无效
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^invalid roleType format:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
        x-400:用户不存在:
          description: ''
          content:
            application/json:
              schema:
                title: 用户不存在
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^user not exists for userName:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:请求体为空:
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    example: '400'
                  message:
                    type: string
                    example: request payload should not be contain empty.
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    example: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /system/role/createApplication:
    get:
      summary: 获取具有创建App角色的用户
      deprecated: false
      description: ''
      operationId: getCreateApplicationRoleUsers
      tags:
        - Apps
        - Permission
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          headers: {}
      security: []
    post:
      summary: 为用户分配 创建App角色
      deprecated: false
      description: ''
      operationId: addCreateApplicationRoleToUser
      tags:
        - Apps
        - Permission
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userIds:
                  type: array
                  items:
                    type: string
              required:
                - userIds
            examples: {}
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: 用户不存在
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^user not exists for userName:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
      security: []
  /system/role/createApplication/{userId}:
    get:
      summary: 查询用户是否具有创建App的权限
      deprecated: false
      description: ''
      operationId: hasCreateApplicationPermission
      tags:
        - Apps
        - Permission
      parameters:
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasCreateApplicationPermission:
                    type: boolean
                required:
                  - hasCreateApplicationPermission
          headers: {}
      security: []
    delete:
      summary: 删除用户的创建App的角色
      deprecated: false
      description: ''
      operationId: deleteCreateApplicationRoleFromUser
      tags:
        - Apps
        - Permission
      parameters:
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: 用户不存在
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^user not exists for userName:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
      security: []
  /apps/{appId}/system/master/{userId}:
    post:
      summary: 为用户分配管理App的权限
      deprecated: false
      description: ''
      operationId: addManageAppMasterRoleToUser
      tags:
        - Apps
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: 用户不存在
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^user not exists for userName:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
      security: []
    delete:
      summary: 移除用户的管理App的权限
      deprecated: false
      description: ''
      operationId: forbidManageAppMaster
      tags:
        - Apps
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: 用户不存在
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    example: '400'
                  message:
                    type: string
                    pattern: ^user not exists for userName:(.+)$
                  timestamp:
                    type: string
                    description: 错误出现时间
                  exception:
                    type: string
                    description: 错误类型
                    default: BadRequestException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /system/role/manageAppMaster:
    get:
      summary: 查询管理App权限是否打开
      deprecated: false
      description: ''
      operationId: isManageAppMasterPermissionEnabled
      tags:
        - Apps
        - Permission
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  isManageAppMasterPermissionEnabled:
                    type: boolean
                required:
                  - isManageAppMasterPermissionEnabled
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/releases/histories:
    get:
      summary: 根据namespace查询发布历史
      deprecated: false
      description: ''
      operationId: findReleaseHistoriesByNamespace
      tags:
        - Apps
        - Env
        - Namespace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: ''
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          description: ''
          required: false
          schema:
            type: integer
            format: int32
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseHistoryBO'
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/releases:
    post:
      summary: 创建发布
      deprecated: false
      description: ''
      operationId: createRelease
      tags:
        - Apps
        - Permission
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenReleaseDTO'
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/branches/{branchName}/releases:
    post:
      summary: 创建灰度发布
      deprecated: false
      description: ''
      operationId: createGrayRelease
      tags:
        - Apps
        - Env
        - Namespace
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: branchName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  $ref: '#/components/schemas/OpenNamespaceReleaseModel'
              required:
                - model
            examples: {}
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenReleaseDTO'
          headers: {}
      security: []
  /envs/{env}/releases/{releaseId}:
    get:
      summary: 获取发布
      deprecated: false
      description: ''
      operationId: get
      tags:
        - Apps
        - Env
        - Release
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: releaseId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: long
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenReleaseDTO'
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Access is denied
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 状态
                    default: '404'
                  message:
                    type: string
                    pattern: ^release not found for releaseId:(.+)$
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    default: NotFoundException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/releases/all:
    get:
      summary: 查找所有的发布
      deprecated: false
      description: ''
      operationId: findAllReleases
      tags:
        - Apps
        - Permission
        - Namespace
        - Env
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - name: size
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            default: 5
            minimum: 0
            exclusiveMinimum: true
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseBO'
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 状态
                    default: '400'
                  message:
                    type: string
                    default: page should be positive or 0
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    default: ConstraintViolationException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:size不符合要求:
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 状态
                    default: '400'
                  message:
                    type: string
                    default: size should be positive number
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    default: ConstraintViolationException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/releases/active:
    get:
      summary: 查找活跃的发布
      deprecated: false
      description: ''
      operationId: findActiveReleases
      tags:
        - Apps
        - Env
        - Namespace
        - Release
      parameters:
        - name: appId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clusterName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
        - name: size
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            exclusiveMinimum: true
            default: 5
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenReleaseDTO'
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 状态
                    default: '400'
                  message:
                    type: string
                    default: page should be positive or 0
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    default: ConstraintViolationException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
        x-400:size不符合要求:
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 状态
                    default: '400'
                  message:
                    type: string
                    default: size should be positive number
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    default: ConstraintViolationException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /envs/{env}/releases/compare:
    get:
      summary: 比较发布
      deprecated: false
      description: ''
      operationId: compareRelease
      tags:
        - Apps
        - Env
        - Namespace
        - Release
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: baseReleaseId
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: long
        - name: toCompareReleaseId
          in: query
          description: ''
          required: true
          schema:
            type: integer
            format: long
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseCompareResult'
          headers: {}
      security: []
  /envs/{env}/releases/{releaseId}/rollback:
    put:
      summary: 回滚配置
      deprecated: false
      description: >-
        回滚到上一版本: 如果不提供 toReleaseId 参数，接口会将当前指定的 releaseId
        所代表的版本回滚到它的上一个已发布版本。回滚到指定版本: 如果提供了 toReleaseId 参数，接口会将配置回滚到 toReleaseId
        所代表的特定历史版本。
      tags: []
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: releaseId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: long
        - name: toReleaseId
          in: query
          description: ''
          required: false
          schema:
            type: integer
            format: long
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: 'null'
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Access is denied
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 状态
                    default: '404'
                  message:
                    type: string
                    pattern: ^release not found for releaseId:(.+)$
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    default: NotFoundException
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /apps/search/by-appid-or-name:
    get:
      summary: 根据appid或者名字搜索app
      deprecated: false
      description: ''
      operationId: search
      tags:
        - Apps
      parameters:
        - name: query
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: pageable
          in: query
          description: Pageable and to be defined
          required: false
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples: {}
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  size:
                    type: integer
                  total:
                    type: integer
                    description: long
                  content:
                    type: array
                    items:
                      description: T
                      $ref: '#/components/schemas/OpenAppDTO'
                    description: List<T>
                required:
                  - page
                  - size
                  - total
                  - content
          headers: {}
      security: []
  /server/portal-db/config:
    post:
      summary: 创建/更新portal数据库中的配置
      deprecated: false
      description: ''
      operationId: createOrUpdatePortalDBConfig
      tags:
        - Configs
        - Apps
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                serverConfig:
                  $ref: '#/components/schemas/ServerConfig'
              required:
                - serverConfig
            examples: {}
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
      security: []
  /server/envs/{env}/config-db/config:
    post:
      summary: 创建/更新Config数据库中的配置
      deprecated: false
      description: ''
      operationId: createOrUpdateConfigDBConfig
      tags:
        - Configs
        - Apps
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                serverConfig:
                  $ref: '#/components/schemas/ServerConfig'
              required:
                - serverConfig
            examples: {}
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
      security: []
  /server/portal-db/config/find-all-config:
    get:
      summary: 查找portal数据库中所有的设置
      deprecated: false
      description: ''
      operationId: findAllPortalDBServerConfig
      tags:
        - Apps
        - Configs
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerConfig'
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
      security: []
  /server/envs/{env}/config-db/config/find-all-config:
    get:
      summary: 查找config数据库中所有的设置
      deprecated: false
      description: ''
      operationId: findAllConfigDBServerConfig
      tags:
        - Env
        - Configs
      parameters:
        - name: env
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerConfig'
          headers: {}
        '403':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 错误代码
                    default: '403'
                  message:
                    type: string
                    default: Forbidden
                  timestamp:
                    type: string
                    format: date-time
                    description: 时间
                  exception:
                    type: string
                    description: 错误类型
                    example: AccessDeniedException
                required:
                  - status
                  - timestamp
                  - exception
                  - message
          headers: {}
      security: []
  /users:
    get:
      summary: 根据关键字搜索获得多个用户信息
      deprecated: false
      description: ''
      operationId: searchUsersByKeyword
      tags: []
      parameters:
        - name: keyword
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: includeInactiveUsers
          in: query
          description: ''
          required: true
          schema:
            type: boolean
            default: false
        - name: offset
          in: query
          description: should be changed to page
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: should be changed to size
          required: true
          schema:
            type: integer
            format: int32
            default: 10
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserInfo'
          headers: {}
      security: []
  /users/enabled:
    put:
      summary: 修改用户的enable字段
      deprecated: false
      description: ''
      operationId: changeUserEnabled
      tags: []
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties: {}
                  description: userPO but to be modified
              required:
                - user
            examples: {}
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
        '500':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  status:
                    type: string
                    description: 状态
                    default: '500'
                  message:
                    type: string
                    example: change user enabled is unsupported
                  timestamp:
                    type: string
                    format: date-time
                  exception:
                    type: string
                    example: UnsupportedOperationException.class
                required:
                  - status
                  - message
                  - timestamp
                  - exception
          headers: {}
      security: []
  /user:
    get:
      summary: 获取当前用户名
      deprecated: false
      description: ''
      operationId: getCurrentUserName
      tags: []
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          headers: {}
      security: []
  /user/logout:
    get:
      summary: 登出操作
      deprecated: false
      description: ''
      operationId: logout
      tags: []
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
      security: []
  /users/{userId}:
    get:
      summary: 根据用户id获取用户信息
      deprecated: false
      description: ''
      operationId: getUserByUserId
      tags: []
      parameters:
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          headers: {}
      security: []
  /organizations:
    get:
      summary: loadOrganization
      deprecated: false
      description: 获取部门信息
      operationId: loadOrganization
      tags:
        - Apps
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenOrganization'
          headers: {}
      security: []
  /prefix-path:
    get:
      summary: 获取prefix路径
      deprecated: false
      description: ''
      operationId: getPrefixPath
      tags: []
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
          headers: {}
      security: []
  /signin:
    get:
      summary: login
      deprecated: false
      description: ''
      operationId: login
      tags: []
      parameters:
        - name: error
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: logout
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
                default: login.html
          headers: {}
      security: []
  /sso_heartbeat:
    get:
      summary: Sso心跳
      deprecated: false
      description: ''
      operationId: heartbeat
      tags: []
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            '*/*':
              schema:
                type: object
                properties: {}
          headers: {}
      security: []
  /system-info:
    get:
      summary: 查询系统信息
      deprecated: false
      description: ''
      operationId: getSystemInfo
      tags: []
      parameters:
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentInfo'
          headers: {}
      security: []
  /system-info/health:
    get:
      summary: 查询系统是否健康
      deprecated: false
      description: ''
      operationId: checkHealth
      tags: []
      parameters:
        - name: instanceId
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: X-Auth-Token
          in: header
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
                description: Spring Health
          headers: {}
      security: []
components:
  schemas:
    BaseEntity:
      type: object
      properties:
        id:
          type: integer
          description: ID 编号
          format: long
        isDeleted:
          type: boolean
          default: false
        deletedAt:
          type: integer
          format: long
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedTime:
          type: string
          format: date
      required:
        - id
        - isDeleted
        - deletedAt
        - dataChangeCreatedBy
        - dataChangeLastModifiedTime
    EntityPair<E>:
      type: object
      properties:
        firstEntity:
          type: object
          properties: {}
          description: ID 编号
          title: E
        secondEntity:
          type: object
          properties: {}
          title: E
      required:
        - firstEntity
        - secondEntity
    ServerConfig:
      type: object
      properties:
        id:
          type: integer
          description: ID 编号
          format: long
        isDeleted:
          type: boolean
          default: false
        deletedAt:
          type: integer
          format: long
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedTime:
          type: string
          format: date
        key:
          type: string
        value:
          type: string
        comment:
          type: string
      required:
        - key
        - value
        - comment
        - id
        - isDeleted
        - deletedAt
        - dataChangeCreatedBy
        - dataChangeLastModifiedTime
    UserInfo:
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        email:
          type: string
        enabled:
          type: integer
          format: int32
      required:
        - userId
        - name
        - email
        - enabled
    KVEntity:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value
    ReleaseBO:
      type: object
      properties:
        baseInfo:
          $ref: '#/components/schemas/OpenReleaseDTO'
        items:
          type: array
          items:
            $ref: '#/components/schemas/KVEntity'
          uniqueItems: true
      required:
        - baseInfo
        - items
    ReleaseHistoryBO:
      type: object
      properties:
        id:
          type: integer
          format: long
        appId:
          type: string
        clusterName:
          type: string
        namespaceName:
          type: string
        branchName:
          type: string
        operator:
          type: string
        operatorDisplayName:
          type: string
        releaseId:
          type: integer
          format: long
        releaseTitle:
          type: string
        releaseComment:
          type: string
        releaseTime:
          type: string
          format: date
        releaseTimeFormatted:
          type: string
        configuration:
          type: array
          items:
            type: object
            properties:
              firstEntity:
                type: string
                title: E
                description: ID 编号
              secondEntity:
                type: string
                title: E
            required:
              - firstEntity
              - secondEntity
        isReleaseAbandoned:
          type: boolean
        previousReleaseId:
          type: integer
          format: long
        operation:
          type: integer
        operationContext:
          type: object
          properties: {}
          additionalProperties:
            type: object
            properties:
              01K0601PYCZM8QCPSF5S9A1QP7:
                x-tmp-pending-properties: true
            required:
              - 01K0601PYCZM8QCPSF5S9A1QP7
      required:
        - id
        - appId
        - clusterName
        - namespaceName
        - branchName
        - operator
        - operatorDisplayName
        - releaseId
        - releaseTitle
        - releaseComment
        - releaseTime
        - releaseTimeFormatted
        - configuration
        - previousReleaseId
        - isReleaseAbandoned
        - operation
        - operationContext
    ClusterNamespaceRolesAssignedUsers:
      type: object
      properties:
        appId:
          type: string
        env:
          type: string
        cluster:
          type: string
        modifyRoleUsers:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          uniqueItems: true
        releaseRoleUsers:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          uniqueItems: true
      required:
        - appId
        - env
        - cluster
        - modifyRoleUsers
        - releaseRoleUsers
    NamespaceRolesAssignedUsers:
      type: object
      properties:
        appId:
          type: string
        namespaceName:
          type: string
        modifyRoleUsers:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          uniqueItems: true
        releaseRoleUsers:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
      required:
        - appId
        - namespaceName
        - modifyRoleUsers
        - releaseRoleUsers
    AppRolesAssignedUsers:
      type: object
      properties:
        appId:
          type: string
        masterUsers:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
          uniqueItems: true
      required:
        - appId
        - masterUsers
    NamespaceUsage:
      type: object
      properties:
        namespaceName:
          type: string
        appId:
          type: string
        clusterName:
          type: string
        envName:
          type: string
        instanceCount:
          type: integer
          format: int32
        branchInstanceCount:
          type: integer
          format: int32
        linkedNamespaceCount:
          type: integer
          format: int32
      required:
        - namespaceName
        - appId
        - clusterName
        - envName
        - instanceCount
        - branchInstanceCount
        - linkedNamespaceCount
    Change:
      type: object
      properties:
        type:
          type: string
          enum:
            - ADDED
            - MODIFIED
            - DELETED
        entity:
          type: object
          properties:
            firstEntity:
              title: E
              description: ID 编号
              $ref: '#/components/schemas/KVEntity'
            secondEntity:
              title: E
              $ref: '#/components/schemas/KVEntity'
          required:
            - firstEntity
            - secondEntity
      required:
        - type
        - entity
    ReleaseCompareResult:
      type: object
      properties:
        changes:
          type: array
          items:
            $ref: '#/components/schemas/Change'
      required:
        - changes
    SystemInfo:
      type: object
      properties:
        version:
          type: string
        environments:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentInfo'
      required:
        - version
        - environments
    EnvironmentInfo:
      type: object
      properties:
        env:
          type: string
        active:
          type: boolean
        metaServerAddress:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDTO'
        configServerices:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDTO'
        errorMessage:
          type: string
      required:
        - env
        - active
        - metaServerAddress
        - configServerices
        - errorMessage
    BaseDTO:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
      required:
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    OpenAppDTO:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
        name:
          type: string
        appId:
          type: string
        orgId:
          type: string
        orgName:
          type: string
        ownerName:
          type: string
        ownerEmail:
          type: string
      required:
        - name
        - appId
        - orgId
        - orgName
        - ownerName
        - ownerEmail
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    NamespaceReleaseDTO:
      type: object
      properties:
        releaseTitle:
          type: string
        releaseComment:
          type: string
        releasedBy:
          type: string
        isEmergencyPublish:
          type: boolean
      required:
        - releaseTitle
        - releaseComment
        - releasedBy
        - isEmergencyPublish
    NamespaceGrayDelReleaseDTO:
      type: object
      properties:
        releaseTitle:
          type: string
        releaseComment:
          type: string
        releasedBy:
          type: string
        isEmergencyPublish:
          type: boolean
        grayDelKeys:
          type: array
          items:
            type: string
          uniqueItems: true
          description: Set<String>
      required:
        - grayDelKeys
        - releaseTitle
        - releaseComment
        - releasedBy
        - isEmergencyPublish
    OpenAppNamespaceDTO:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
        name:
          type: string
        appId:
          type: string
        format:
          type: string
        isPublic:
          type: boolean
        appendNamespacePrefix:
          type: boolean
          description: whether to append namespace prefix for public namespace name
          default: true
        comment:
          type: string
      required:
        - name
        - appId
        - format
        - isPublic
        - appendNamespacePrefix
        - comment
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    OpenClusterDTO:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
        name:
          type: string
        appId:
          type: string
      required:
        - name
        - appId
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    OpenCreateAppDTO:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
        assignAppRoleToSelf:
          type: boolean
          description: >-
            when assignAppRoleToSelf is true, you can do anything with the app
            by current token!
        admins:
          type: array
          items:
            type: string
          uniqueItems: true
          description: |
            Set<String>
        app:
          $ref: '#/components/schemas/OpenAppDTO'
      required:
        - assignAppRoleToSelf
        - admins
        - app
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    OpenEnvClusterDTO:
      type: object
      properties:
        env:
          type: string
        clusters:
          type: array
          items:
            type: string
          uniqueItems: true
          description: Set<String>
      required:
        - env
        - clusters
    OpenItemDTO:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
        key:
          type: string
        type:
          type: integer
        value:
          type: string
        comment:
          type: string
      required:
        - key
        - type
        - value
        - comment
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    OpenNamespaceDTO:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
        id:
          type: integer
          format: long
        appId:
          type: string
        clusterName:
          type: string
        namespaceName:
          type: string
          pattern: '[0-9a-zA-Z_-]+[0-9a-zA-Z_.-]*'
      required:
        - appId
        - clusterName
        - id
        - namespaceName
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    OpenNamespaceLockDTO:
      type: object
      properties:
        namespaceName:
          type: string
        isLocked:
          type: boolean
        lockedBy:
          type: string
      required:
        - namespaceName
        - isLocked
        - lockedBy
    OpenOrganizationDto: &ref_0
      type: object
      properties:
        orgId:
          type: string
        orgName:
          type: string
      required:
        - orgId
        - orgName
    OpenPageDTO<T>:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        total:
          type: integer
          description: long
        content:
          type: array
          items:
            type: object
            properties: {}
            description: T
          description: List<T>
      required:
        - page
        - size
        - total
        - content
    OpenClusterDTO1:
      type: object
      properties:
        clusters:
          type: array
          items:
            type: string
      required:
        - clusters
    OpenCommitDTO:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
        changeSets:
          type: string
        appId:
          type: string
        clusterName:
          type: string
        namespaceName:
          type: string
        comment:
          type: string
      required:
        - changeSets
        - appId
        - clusterName
        - namespaceName
        - comment
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    OpenFavoriteDTO:
      type: object
      properties: {}
    OpenItemInfo:
      type: object
      properties:
        appId:
          type: string
        envName:
          type: string
        clusterName:
          type: string
        namespaceName:
          type: string
        key:
          type: string
        value:
          type: string
      required:
        - appId
        - envName
        - clusterName
        - namespaceName
        - key
        - value
    OpenReleaseDTO:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
        id:
          type: string
        releaseKey:
          type: string
        name:
          type: string
        appId:
          type: string
        clusterName:
          type: string
        namespaceName:
          type: string
        configurations:
          type: string
        comment:
          type: string
        isAbandoned:
          type: boolean
      required:
        - id
        - releaseKey
        - name
        - appId
        - clusterName
        - namespaceName
        - configurations
        - comment
        - isAbandoned
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    OpenInstanceConfigDTO:
      type: object
      properties:
        release:
          $ref: '#/components/schemas/OpenReleaseDTO'
        releaseDeliveryTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
      required:
        - release
        - releaseDeliveryTime
        - dataChangeLastModifiedTime
    OpenInstanceDTO:
      type: object
      properties:
        id:
          type: integer
        appId:
          type: string
        clusterName:
          type: string
        dataCenter:
          type: string
        ip:
          type: string
        configs:
          type: array
          items:
            type: object
            properties:
              release:
                $ref: '#/components/schemas/OpenReleaseDTO'
              releaseDeliveryTime:
                type: string
                format: date
              dataChangeLastModifiedTime:
                type: string
                format: date
            required:
              - release
              - releaseDeliveryTime
              - dataChangeLastModifiedTime
        dataChangeCreatedTime:
          type: string
          format: date
      required:
        - appId
        - id
        - clusterName
        - dataCenter
        - ip
        - configs
        - dataChangeCreatedTime
    OpenVerifiable:
      type: object
      properties:
        isInvalid:
          type: boolean
      required:
        - isInvalid
    OpenNamespaceTextModel:
      type: object
      properties:
        isInvalid:
          type: boolean
        appId:
          type: string
        env:
          type: string
        clusterName:
          type: string
        namespaceName:
          type: string
        namespaceId:
          type: integer
          format: long
        format:
          type: string
        configText:
          type: string
        operator:
          type: string
      required:
        - appId
        - env
        - clusterName
        - namespaceName
        - namespaceId
        - format
        - configText
        - operator
        - isInvalid
    OpenNamespaceIdentifier:
      type: object
      properties:
        isInvalid:
          type: boolean
        appId:
          type: string
        env:
          type: string
        clusterName:
          type: string
        namespaceName:
          type: string
      required:
        - appId
        - env
        - clusterName
        - namespaceName
        - isInvalid
    OpenNamespaceSyncModel:
      type: object
      properties:
        isInvalid:
          type: boolean
        syncToNamespaces:
          type: array
          items:
            $ref: '#/components/schemas/OpenNamespaceIdentifier'
        syncItems:
          type: array
          items:
            $ref: '#/components/schemas/OpenItemDTO'
      required:
        - syncToNamespaces
        - syncItems
        - isInvalid
    OpenItemChangeSets:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
        createItems:
          type: array
          items:
            $ref: '#/components/schemas/OpenItemDTO'
        updateItems:
          type: array
          items:
            $ref: '#/components/schemas/OpenItemDTO'
        deleteItems:
          type: array
          items:
            $ref: '#/components/schemas/OpenItemDTO'
      required:
        - createItems
        - updateItems
        - deleteItems
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    OpenItemDiffs:
      type: object
      properties:
        namespace:
          $ref: '#/components/schemas/OpenNamespaceIdentifier'
        diffs:
          $ref: '#/components/schemas/OpenItemChangeSets'
        extInfo:
          type: string
      required:
        - namespace
        - diffs
        - extInfo
    OpenItemBO:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/OpenItemDTO'
        isModified:
          type: boolean
        isDeleted:
          type: boolean
        oldValue:
          type: string
        newValue:
          type: string
      required:
        - item
        - isModified
        - isDeleted
        - oldValue
        - newValue
    OpenNamespaceBO:
      type: object
      properties:
        baseInfo:
          $ref: '#/components/schemas/OpenNamespaceDTO'
        itemModifiedCnt:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/OpenItemBO'
        format:
          type: string
        isPublic:
          type: boolean
        parentAppId:
          type: string
        comment:
          type: string
        isConfigHidden:
          type: boolean
      required:
        - baseInfo
        - itemModifiedCnt
        - items
        - format
        - isPublic
        - parentAppId
        - comment
        - isConfigHidden
    OpenNamespaceReleaseModel:
      type: object
      properties:
        isInvalid:
          type: boolean
        appId:
          type: string
        env:
          type: string
        clusterName:
          type: string
        namespaceName:
          type: string
        releaseTitle:
          type: string
        releaseComment:
          type: string
        releasedBy:
          type: string
        isEmergencyPublish:
          type: boolean
      required:
        - appId
        - env
        - clusterName
        - namespaceName
        - releaseTitle
        - releaseComment
        - releasedBy
        - isEmergencyPublish
        - isInvalid
    OpenGrayReleaseRuleItemDTO:
      type: object
      properties:
        ALL_IP:
          type: string
          const: '*'
        ALL_Label:
          type: string
          const: '*'
        clientAppId:
          type: string
        clientIpList:
          type: array
          items:
            type: string
          uniqueItems: true
        clientLabelList:
          type: array
          items:
            type: string
          uniqueItems: true
      required:
        - ALL_IP
        - ALL_Label
        - clientAppId
        - clientIpList
        - clientLabelList
    OpenGrayReleaseRuleDTO:
      type: object
      properties:
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedBy:
          type: string
        dataChangeCreatedTime:
          type: string
          format: date
        dataChangeLastModifiedTime:
          type: string
          format: date
        appId:
          type: string
        clusterName:
          type: string
        namespaceName:
          type: string
        branchName:
          type: string
        ruleItems:
          type: array
          items:
            $ref: '#/components/schemas/OpenGrayReleaseRuleItemDTO'
          uniqueItems: true
        releaseId:
          type: integer
          format: long
      required:
        - appId
        - clusterName
        - namespaceName
        - branchName
        - ruleItems
        - releaseId
        - dataChangeCreatedBy
        - dataChangeLastModifiedBy
        - dataChangeCreatedTime
        - dataChangeLastModifiedTime
    AppNamespace:
      type: object
      properties:
        id:
          type: integer
          description: ID 编号
          format: long
        isDeleted:
          type: boolean
          default: false
        deletedAt:
          type: integer
          format: long
        dataChangeCreatedBy:
          type: string
        dataChangeLastModifiedTime:
          type: string
          format: date
        name:
          type: string
        appId:
          type: string
        format:
          type: string
        isPublic:
          type: string
        comment:
          type: string
      required:
        - name
        - appId
        - format
        - isPublic
        - comment
        - id
        - isDeleted
        - deletedAt
        - dataChangeCreatedBy
        - dataChangeLastModifiedTime
    OpenNamespaceCreationModel:
      type: object
      properties:
        env:
          type: string
        namespace:
          $ref: '#/components/schemas/OpenNamespaceDTO'
      required:
        - env
        - namespace
    OpenLockInfo:
      type: object
      properties:
        lockOwner:
          type: string
        isEmergencyPublishAllowed:
          type: boolean
      required:
        - lockOwner
        - isEmergencyPublishAllowed
    OpenOrganization: *ref_0
    OpenPermissionCondition:
      type: object
      properties:
        hasPermission:
          type: boolean
      required:
        - hasPermission
    OpenNamespaceEnvRolesAssignedUsers:
      type: object
      properties:
        env:
          type: string
      required:
        - env
    ServiceDTO:
      type: object
      properties:
        appName:
          type: string
        instanceId:
          type: string
        homepageUrl:
          type: string
      required:
        - appName
        - instanceId
        - homepageUrl
  securitySchemes: {}
servers: []
security: []
